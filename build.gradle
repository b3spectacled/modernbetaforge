buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:4.+'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}
        
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'eclipse'

version = '1.12.2-1.2.0.0'
group = 'mod.bespectacled.modernbetaforge'
archivesBaseName = 'modernbetaforge'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: 'snapshot', version: '20171003-1.12'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            arg '-torg.spongepowered.asm.launch.MixinTweaker'
        }

        server {
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            arg '-torg.spongepowered.asm.launch.MixinTweaker'
        }
    }
}

repositories {
    maven { url = 'https://repo.spongepowered.org/maven' }
}

configurations {
    library
    implementation.extendsFrom library
}

dependencies {
    // Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'
    
    library "com.google.guava:guava:21.0"
    library "org.spongepowered:mixin:0.8.5-SNAPSHOT"
    
    annotationProcessor "org.spongepowered:mixin:0.8.5-SNAPSHOT"
    annotationProcessor "com.google.code.gson:gson:2.8.9"
    annotationProcessor "com.google.guava:guava:21.0"
    annotationProcessor "org.ow2.asm:asm-debug-all:5.2"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        
        expand ([
            'version': project.version
        ])
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

mixin {
	add sourceSets.main, 'refmap.modernbetaforge.json'
    config 'mixins.modernbetaforge.json'
}

jar {
    manifest.attributes(
        'FMLAT': 'accesstransformer.cfg',
        "ForceLoadAsMod": true,
        'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
    	'TweakOrder': '0'
    )
}